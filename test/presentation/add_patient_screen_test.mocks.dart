// Mocks generated by Mockito 5.4.4 from annotations
// in medrefer_ai/test/presentation/add_patient_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:medrefer_ai/database/models/medical_history.dart' as _i11;
import 'package:medrefer_ai/database/models/patient.dart' as _i14;
import 'package:medrefer_ai/database/services/data_service.dart' as _i21;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i22;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataService extends _i1.Mock implements _i21.DataService {
  MockDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i22.Database> getDatabase() => (super.noSuchMethod(
        Invocation.method(
          #getDatabase,
          [],
        ),
        returnValue: _i3.Future<_i22.Database>.value(_FakeDatabase_0(
          this,
          Invocation.method(
            #getDatabase,
            [],
          ),
        )),
      ) as _i3.Future<_i22.Database>);

  @override
  _i3.Future<String> createPatient(_i14.Patient? patient) => (super.noSuchMethod(
        Invocation.method(
          #createPatient,
          [patient],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> createMedicalHistory(_i11.MedicalHistory? history) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMedicalHistory,
          [history],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<_i14.Patient>> getAllPatients() => (super.noSuchMethod(
        Invocation.method(
          #getAllPatients,
          [],
        ),
        returnValue: _i3.Future<List<_i14.Patient>>.value(<_i14.Patient>[]),
      ) as _i3.Future<List<_i14.Patient>>);

  @override
  _i3.Future<_i14.Patient?> getPatientById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPatientById,
          [id],
        ),
        returnValue: _i3.Future<_i14.Patient?>.value(),
      ) as _i3.Future<_i14.Patient?>);

  @override
  _i3.Future<bool> updatePatient(_i14.Patient? patient) => (super.noSuchMethod(
        Invocation.method(
          #updatePatient,
          [patient],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deletePatient(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePatient,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i14.Patient>> searchPatients(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPatients,
          [query],
        ),
        returnValue: _i3.Future<List<_i14.Patient>>.value(<_i14.Patient>[]),
      ) as _i3.Future<List<_i14.Patient>>);
}

class _FakeDatabase_0 extends _i1.SmartFake implements _i22.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}